#!/usr/bin/env bash
package=Xray-Core
package_split=(${package//\// })
package_name=${package_split[-1]}

platforms=(
"linux/386"
"linux/amd64"
"linux/arm"
"linux/arm64"
"linux/mips"
"linux/mips64"
"linux/mips64le"
"linux/mipsle"
"linux/riscv64"
"linux/s390x"
)

for platform in "${platforms[@]}"
do
    platform_split=(${platform//\// })
    GOOS=${platform_split[0]}
    GOARCH=${platform_split[1]}
    output_name=$package_name'-'$GOOS'-'$GOARCH
    if [ $GOOS = "windows" ]; then
        output_name+='.exe'
    fi

    if [ $GOARCH = "arm" ]; then
        echo " "
        echo "###################### arm32v5 ######################"
        echo " "
        env CGO_ENABLED=1 CC=arm-linux-gnueabi-gcc GOOS=$GOOS GOARCH=$GOARCH GOARM=5 go build -o OUT/"$output_name"32v5 -v -trimpath -ldflags "-s -w -buildid=" ./main
        echo " "
        echo "###################### arm32v6 ######################"
        echo " "
        env CGO_ENABLED=1 CC=arm-linux-gnueabi-gcc GOOS=$GOOS GOARCH=$GOARCH GOARM=6 go build -o OUT/"$output_name"32v6 -v -trimpath -ldflags "-s -w -buildid=" ./main
        echo " "
        echo "###################### arm32v7 ######################"
        echo " "
        env CGO_ENABLED=1 CC=arm-linux-gnueabi-gcc GOOS=$GOOS GOARCH=$GOARCH GOARM=7 go build -o OUT/"$output_name"32v7 -trimpath -ldflags "-s -w -buildid=" ./main
    elif [ $GOARCH = "386" ]; then
        echo " "
        echo "###################### $GOARCH ######################"
        echo " "
        env CGO_ENABLED=1 CC=i686-linux-gnu-gcc GOOS=$GOOS GOARCH=$GOARCH go build -o OUT/$output_name -trimpath -ldflags "-s -w -buildid=" ./main
    elif [ $GOARCH = "amd64" ]; then
        echo " "
        echo "###################### $GOARCH ######################"
        echo " "
        env CGO_ENABLED=1 CC=x86_64-linux-gnu-gcc GOOS=$GOOS GOARCH=$GOARCH go build -o OUT/$output_name -trimpath -ldflags "-s -w -buildid=" ./main
    elif [ $GOARCH = "arm64" ]; then
        echo " "
        echo "###################### $GOARCH ######################"
        echo " "
        env CGO_ENABLED=1 CC=aarch64-linux-gnu-gcc GOOS=$GOOS GOARCH=$GOARCH go build -o OUT/$output_name -trimpath -ldflags "-s -w -buildid=" ./main
    elif [ $GOARCH = "mips" ]; then
        echo " "
        echo "###################### $GOARCH ######################"
        echo " "
        env CGO_ENABLED=1 CC=mips-linux-gnu-gcc GOOS=$GOOS GOARCH=$GOARCH go build -o OUT/$output_name -trimpath -ldflags "-s -w -buildid=" ./main
    elif [ $GOARCH = "mips64" ]; then
        echo " "
        echo "###################### $GOARCH ######################"
        echo " "
        env CGO_ENABLED=1 CC=mips64-linux-gnuabi64-gcc GOOS=$GOOS GOARCH=$GOARCH go build -o OUT/$output_name -trimpath -ldflags "-s -w -buildid=" ./main
    # elif [ $GOARCH = "mips64le" ]; then
    #     echo " "
    #     echo "###################### $GOARCH ######################"
    #     echo " "
    #     env CGO_ENABLED=1 CC=mips64-linux-gnuabi64-gcc GOOS=$GOOS GOARCH=$GOARCH go build -o OUT/$output_name -trimpath -ldflags "-s -w -buildid=" ./main
    # elif [ $GOARCH = "mipsle" ]; then
    #     echo " "
    #     echo "###################### $GOARCH ######################"
    #     echo " "
    #     env CGO_ENABLED=1 CC=mipsel-linux-gnu-gcc GOOS=$GOOS GOARCH=$GOARCH go build -o OUT/$output_name -trimpath -ldflags "-s -w -buildid=" ./main
    elif [ $GOARCH = "riscv64" ]; then
        echo " "
        echo "###################### $GOARCH ######################"
        echo " "
        env CGO_ENABLED=1 CC=riscv64-linux-gnu-gcc GOOS=$GOOS GOARCH=$GOARCH go build -o OUT/$output_name -trimpath -ldflags "-s -w -buildid=" ./main
    elif [ $GOARCH = "s390x" ]; then
        echo " "
        echo "###################### $GOARCH ######################"
        echo " "
        env CGO_ENABLED=1 CC=s390x-linux-gnu-gcc GOOS=$GOOS GOARCH=$GOARCH go build -o OUT/$output_name -trimpath -ldflags "-s -w -buildid=" ./main
    else
        echo " "
        echo "###################### None ######################"
        echo " "
        # env CGO_ENABLED=1 GOOS=$GOOS GOARCH=$GOARCH go build -o OUT/$output_name -trimpath -ldflags "-s -w -buildid=" ./main
    fi

    if [ $? -ne 0 ]; then
           echo 'An error has occurred! Aborting the script execution...'
        exit 1
    fi
done
